/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!*************************!*\
  !*** ./source/index.js ***!
  \*************************/
eval("const API_KEY = \"f9040ab1b9c802857aa783c469d0e0ff7e7366e4\";\nconst API_APP_TYPE = \"desktop\";\nconst API_COUNT = 10;\nconst API_SOURCE_ID = \"214321562187\";\nconst API_SOURCE_URL = \"http://www.site.com/videos/214321562187.html\";\nconst API_SOURCE_TYPE = \"video\";\nconst API_URL = `http://api.taboola.com/1.0/json/taboola-templates/recommendations.get?app.type=${API_APP_TYPE}&app.apikey=${API_KEY}&count=${API_COUNT}&source.type=${API_SOURCE_TYPE}&source.id=${API_SOURCE_ID}&source.url=${API_SOURCE_URL}`;\n\nconst getSuggestions = () =>\n  new Promise((resolve, reject) => {\n    fetch(API_URL)\n      .then((response) => response.json())\n      .then((responseObject) => responseObject.list)\n      .then((suggestionsArr) => resolve(suggestionsArr))\n      .catch((error) => reject(error));\n  });\n\nconst createThumbnailImg = (suggestion) => {\n  const thumbnailImgContainer = document.createElement(\"span\");\n  //   thumbnailImgContainer.style.width = \"200px\";\n  //   thumbnailImgContainer.style.height = \"200px\";\n  //   thumbnailImgContainer.style.background = \"#000\";\n  //   thumbnailImgContainer.style.display = \"inline-block\";\n  suggestion.thumbnail.forEach((thumbnailObj) => {\n    const thumbnailImg = document.createElement(\"img\");\n    thumbnailImg.src = thumbnailObj.url;\n    thumbnailImg.alt = suggestion.name;\n    thumbnailImg.style.maxHeight = \"200px\";\n    thumbnailImg.style.maxWidth = \"200px\";\n    thumbnailImgContainer.appendChild(thumbnailImg);\n  });\n  return thumbnailImgContainer;\n};\n\nconst createThumbnailCaption = (suggestion) => {\n  const thumbnailCaption = document.createElement(\"h3\");\n  thumbnailCaption.innerText = suggestion.name;\n  thumbnailCaption.style.fontSize = \"24px\";\n  thumbnailCaption.style.marginLeft = \"5px\";\n  thumbnailCaption.style.color = \"#0f0f0f\";\n  thumbnailCaption.style.fontFamily = \"sans-serif\";\n  thumbnailCaption.style.fontWeight = \"normal\";\n  thumbnailCaption.style.display = \"inline-block\";\n  return thumbnailCaption;\n};\n\nconst createThumbnail = (suggestion) => {\n  const thumbnailCaption = createThumbnailCaption(suggestion);\n  const thumbnailImg = createThumbnailImg(suggestion);\n\n  // create thumbnail anchor\n  const thumbnailAnchor = document.createElement(\"a\");\n  if (thumbnailImg) {\n    thumbnailAnchor.appendChild(thumbnailImg);\n  }\n  thumbnailAnchor.appendChild(thumbnailCaption);\n  thumbnailAnchor.href = suggestion.url;\n  thumbnailAnchor.rel = \"nofollow\";\n  thumbnailAnchor.style.flexGrow = 1;\n  thumbnailAnchor.style.maxWidth = \"600px\";\n  thumbnailAnchor.style.display = \"flex\";\n  thumbnailAnchor.style.margin = \"5px\";\n  thumbnailAnchor.style.textDecoration = \"none\";\n  return thumbnailAnchor;\n};\n\nconst responseToHtml = (suggestionsArr) => {\n  const suggestionsContainer = document.getElementById(\"suggested-by-taboola\");\n  suggestionsContainer.style.display = \"flex\";\n  suggestionsContainer.style.flexWrap = \"wrap\";\n  suggestionsArr.map(createThumbnail).forEach((img) => {\n    suggestionsContainer.appendChild(img);\n  });\n};\n\ngetSuggestions()\n  .then(responseToHtml)\n  .catch((error) => console.error(error));\n\n\n//# sourceURL=webpack:///./source/index.js?");
/******/ })()
;